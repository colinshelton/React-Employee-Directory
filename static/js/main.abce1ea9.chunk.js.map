{"version":3,"sources":["components/Sort.js","utils/API.js","components/Table.js","App.js","index.js"],"names":["Sort","props","className","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","axios","get","Table","state","employees","filteredEmployees","userInput","handleInput","e","setState","target","value","filter","employee","regex","RegExp","name","last","match","API","response","this","data","results","console","log","placeholder","onChange","scope","undefined","map","first","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNA+BeA,EA9BF,SAACC,GACZ,OACE,yBAAKC,UAAU,YACb,4BACEA,UAAU,oCACVC,KAAK,SACLC,GAAG,qBACHC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SANhB,eAUA,yBAAKL,UAAU,gBAAgBM,kBAAgB,sBAC7C,uBAAGN,UAAU,gBAAgBO,KAAK,KAAlC,qBAGA,uBAAGP,UAAU,gBAAgBO,KAAK,KAAlC,wB,iFCdO,EACH,WACR,OAAOC,IAAMC,IAJD,0CC8EDC,E,4MA5EbC,MAAQ,CACNC,UAAW,GAGXC,kBAAmB,GACnBC,UAAW,I,EAYbC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,UAAWE,EAAEE,OAAOC,MACpBN,kBAAmB,YAAI,EAAKF,MAAMC,WAAWQ,QAAO,SAACC,GACnD,IAAMC,EAAQ,IAAIC,OAAOP,EAAEE,OAAOC,MAAO,MACzC,OAAOE,EAASG,KAAKC,KAAKC,MAAMJ,S,kMAbbK,I,OAAjBC,E,OACNC,KAAKZ,SAAS,CACZL,UAAWgB,EAASE,KAAKC,QACzBlB,kBAAmBe,EAASE,KAAKC,UAEnCC,QAAQC,IAAIL,EAASE,KAAKC,S,qIAqBlB,IAAD,OAGP,OAFAC,QAAQC,IAAI,YAAaJ,KAAKlB,MAAMC,WAGlC,yBAAKZ,UAAU,aACb,2BACEmB,MAAOU,KAAKlB,MAAMG,UAClBoB,YAAY,+BACZC,SAAU,SAACnB,GAAD,OAAO,EAAKD,YAAYC,MAEpC,2BAAOhB,UAAU,SACf,+BACE,4BACE,wBAAIoC,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,UAGJ,oCACuCC,IAApCR,KAAKlB,MAAME,kBAAkB,SACWwB,IAAzCR,KAAKlB,MAAME,kBAAkB,GAAGW,KAC9BK,KAAKlB,MAAME,kBAAkByB,KAAI,SAACjB,GAChC,OACE,4BACE,4BAAKA,EAASnB,GAAGsB,MACjB,4BAAKH,EAASG,KAAKe,OACnB,4BAAKlB,EAASG,KAAKC,UAKzB,qCAbJ,W,GAtDUe,aCWLC,MAVf,WACE,OACE,6BACE,wBAAIzC,UAAU,UAAd,0BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFN0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.abce1ea9.chunk.js","sourcesContent":["import React from \"react\";\nconst Sort = (props) => {\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Sort button\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <a className=\"dropdown-item\" href=\"#\">\n          highest to lowest\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          lowest to highest\n        </a>\n      </div>\n    </div>\n\n    // <form onSubmit={props.handleSubmit}>\n    //   <input type=\"text\" placeholder=\"Employee Name\" required />\n    //   <button>Search</button>\n    // </form>\n  );\n};\n\nexport default Sort;\n","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=10\";\n\nexport default {\n  getUsers: function () {\n    return axios.get(BASEURL);\n  },\n};\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\n\nclass Table extends Component {\n  state = {\n    employees: [],\n    // only do one API call that does not update\n    //use this for employee table\n    filteredEmployees: [],\n    userInput: \"\",\n  };\n\n  async componentDidMount() {\n    const response = await API.getUsers();\n    this.setState({\n      employees: response.data.results,\n      filteredEmployees: response.data.results,\n    });\n    console.log(response.data.results);\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      userInput: e.target.value,\n      filteredEmployees: [...this.state.employees].filter((employee) => {\n        const regex = new RegExp(e.target.value, \"gi\");\n        return employee.name.last.match(regex);\n      }),\n    });\n  };\n\n  // SORT by name need click handler for collum header, instead of filter call .sort and provide state value that is asending or descending\n  // sorted array will be off of second array\n  //.\n  // each will\n  // function handler\n  // this.target.value\n  // sort function\n\n  render() {\n    console.log(\"employees\", this.state.employees);\n\n    return (\n      <div className=\"container\">\n        <input\n          value={this.state.userInput}\n          placeholder=\"Enter name to search for....\"\n          onChange={(e) => this.handleInput(e)}\n        />\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">First</th>\n              <th scope=\"col\">Last</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.filteredEmployees[0] !== undefined &&\n            this.state.filteredEmployees[0].name !== undefined ? (\n              this.state.filteredEmployees.map((employee) => {\n                return (\n                  <tr>\n                    <td>{employee.id.name}</td>\n                    <td>{employee.name.first}</td>\n                    <td>{employee.name.last}</td>\n                  </tr>\n                );\n              })\n            ) : (\n              <></>\n            )}\n            )\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport Sort from \"./components/Sort\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"header\">Employee Directory App</h1>\n      <Sort />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n//import \"./index.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}